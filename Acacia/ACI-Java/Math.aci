let Math;

{
    def truncate(x, padding) {
        let num = convert(x, "string");
        let int = "";
        foreach (let c; num;) {
            if (c == ".") exit;
            else int = int + c;
        }
        return convert(int, "number") + padding;
    }

    class MathClass {
        // Math methods here:
        abs(x) {
            if (x < 0) return -x;
            else return x;
        }
        ceil(x) {
            if (x > 0) return truncate(x, 1);
            if (x < 0) return truncate(x, 0);
            else return x;
        }
        floor(x) {
            if (x > 0) return truncate(x, 0);
            if (x < 0) return truncate(x, -1);
            else return x;
        }
        round(x) {
            let num = convert(x, "string");
            let dec = false;
            foreach (let c; num;) {
                if (c == "."){
                    dec = true;
                    next;
                }
                if (dec) {
                    if (convert(c, "number") > 4) return this.ceil(x);
                    else return this.floor(x);
                }
            }
        }
        random(min, max) {
            return min + generateRandomNumber() * (max - min);
        }
        min(a, b) {
            if (a < b) return a;
            else return b;
        }
        max(a, b) {
            if (a > b) return a;
            else return b;
        }
        quadratic(a, b, c) {
            let sqrt = (b^2 - 4 * a * c) ^ 0.5;
            return [
                (-b + sqrt) / (2 * a),
                (-b - sqrt) / (2 * a)
            ];
        }
        setSum(set) {
            assert(type(set) == "set", set + " is not a set");
            let total = 0;
            foreach (let elem; set;) {
                total = total + elem;
            }
            return total;
        }
    }

    // Instantiate math class
    Math = MathClass();
}

// Math fields here:
Math.pi  = 3.141592653589793;
Math.e   = 2.718281828459045;
Math.tau = Math.pi * 2;
Math.phi = 1.618033988749894;